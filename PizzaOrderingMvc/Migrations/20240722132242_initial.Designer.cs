// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaOrderingMvc.PizzaApp_DbContext;

#nullable disable

namespace PizzaOrderingMvc.Migrations
{
    [DbContext(typeof(PizzaAppDbContext))]
    [Migration("20240722132242_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzaOrderingMvc.Models.Base", b =>
                {
                    b.Property<Guid>("baseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("baseId");

                    b.ToTable("Base");

                    b.HasData(
                        new
                        {
                            baseId = new Guid("414e4852-7515-492d-a2c5-89a3416e0948"),
                            BaseName = "Thick"
                        },
                        new
                        {
                            baseId = new Guid("8dc0dacf-9a70-4bb0-be4c-da5fa79545a4"),
                            BaseName = "Thin"
                        });
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.Pizza", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PizzaId");

                    b.HasIndex("BaseId");

                    b.HasIndex("SizeId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.PizzaTopping", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToppingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PizzaId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("PizzaTopping");
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.Size", b =>
                {
                    b.Property<Guid>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PizzaSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            SizeId = new Guid("58695154-e769-4669-bb6f-b8ebe2419b77"),
                            PizzaSize = "Large"
                        },
                        new
                        {
                            SizeId = new Guid("5d2798ce-6346-46ac-a14c-0e6df3cebf41"),
                            PizzaSize = "Medium"
                        },
                        new
                        {
                            SizeId = new Guid("c6c25d06-7396-4d1e-aab3-b2d2f602774e"),
                            PizzaSize = "Small"
                        });
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.Toppings", b =>
                {
                    b.Property<Guid>("ToppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToppingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToppingId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            ToppingId = new Guid("e277f521-5e51-40dc-8bd1-993cc6b5046f"),
                            ToppingName = "Chicken"
                        },
                        new
                        {
                            ToppingId = new Guid("cc2734b1-3ce7-4c57-99de-de76eb359285"),
                            ToppingName = "Pepperoni"
                        },
                        new
                        {
                            ToppingId = new Guid("101c69de-9da5-481c-ac3c-adcac755a56d"),
                            ToppingName = "Extra Chaeese"
                        },
                        new
                        {
                            ToppingId = new Guid("d51482b5-5a96-4052-8b6d-5fe218d88612"),
                            ToppingName = "Mushroom"
                        },
                        new
                        {
                            ToppingId = new Guid("cf3f6f3a-f6be-4359-a91a-f19098d60f35"),
                            ToppingName = "Spinach"
                        },
                        new
                        {
                            ToppingId = new Guid("bda0b52d-c628-4238-8ac9-247b384b7f97"),
                            ToppingName = "Olives"
                        });
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.Order", b =>
                {
                    b.HasOne("PizzaOrderingMvc.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.Pizza", b =>
                {
                    b.HasOne("PizzaOrderingMvc.Models.Base", "_base")
                        .WithMany()
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrderingMvc.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");

                    b.Navigation("_base");
                });

            modelBuilder.Entity("PizzaOrderingMvc.Models.PizzaTopping", b =>
                {
                    b.HasOne("PizzaOrderingMvc.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrderingMvc.Models.Toppings", "Topping")
                        .WithMany()
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Topping");
                });
#pragma warning restore 612, 618
        }
    }
}
